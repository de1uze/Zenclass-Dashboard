{"ast":null,"code":"var _jsxFileName = \"/Users/de1uze/Desktop/capstone_final/Zenclass-Dashboard-frontend/src/containers/ResetPassword/index.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { API } from \"../../global\";\nimport \"./resetPassword.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ResetPassword() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    id,\n    token\n  } = useParams();\n  const [password, setPassword] = useState(\"\");\n  const [reenteredPassword, setReenteredPassword] = useState(\"\");\n  const [invalidErrorMessage, setInvalidErrorMessage] = useState(\"\");\n\n  const onPasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const onReenteredPasswordChange = e => {\n    setReenteredPassword(e.target.value);\n  };\n\n  const onReset = e => {\n    e.preventDefault();\n\n    if (password === reenteredPassword) {\n      var data = [{\n        id: id,\n        password: password,\n        token: token\n      }];\n      fetch(`${API}/users/resetPassword`, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      }).then(response => {\n        return response.json();\n      }).then(jsonResponse => {\n        if (jsonResponse.message === \"Successful Reset\") {\n          navigate(\"/login\");\n        } else {\n          setInvalidErrorMessage(jsonResponse.message);\n        }\n      }).catch(error => {\n        console.log(\"error\", error);\n      });\n    } else {\n      setInvalidErrorMessage(\"Password doesnot match\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetPassword\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"resetContent\",\n      onSubmit: e => onReset(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logoText\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"LEARN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), \"INFINITY\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), invalidErrorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalidErrorMessage\",\n        children: invalidErrorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"passwordWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Enter new Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          onChange: e => onPasswordChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reenteredPasswordWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"reenteredPassword\",\n          children: \"Re-enter the new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"reenteredPassword\",\n          onChange: e => onReenteredPasswordChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResetPassword, \"ogszScMkinNbHX8dkBpvfEClQKU=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["Button","useState","useNavigate","useParams","API","ResetPassword","navigate","id","token","password","setPassword","reenteredPassword","setReenteredPassword","invalidErrorMessage","setInvalidErrorMessage","onPasswordChange","e","target","value","onReenteredPasswordChange","onReset","preventDefault","data","fetch","method","body","JSON","stringify","headers","then","response","json","jsonResponse","message","catch","error","console","log"],"sources":["/Users/de1uze/Desktop/capstone_final/Zenclass-Dashboard-frontend/src/containers/ResetPassword/index.js"],"sourcesContent":["import { Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { API } from \"../../global\";\nimport \"./resetPassword.css\";\n\nexport function ResetPassword(){\n\n    const navigate = useNavigate();\n    const {id, token} = useParams();\n    const[password, setPassword] = useState(\"\");\n    const [reenteredPassword, setReenteredPassword] = useState(\"\");\n    const[invalidErrorMessage, setInvalidErrorMessage] = useState(\"\");\n\n    const onPasswordChange = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const onReenteredPasswordChange = (e) => {\n        setReenteredPassword(e.target.value);\n    }\n\n    const onReset = (e) => {\n\n        e.preventDefault();\n       \n        if(password === reenteredPassword){\n            var data = [{\n                id: id,\n                password: password,\n                token: token\n            }];\n            fetch(`${API}/users/resetPassword`, {\n                method: \"POST\",\n                body: JSON.stringify(data),\n                headers: {\"content-type\": \"application/json\"}\n            }).then(response => {\n                return response.json();\n              }).then(jsonResponse => {\n                if(jsonResponse.message === \"Successful Reset\") {\n                    navigate(\"/login\");\n                } else {\n                    setInvalidErrorMessage(jsonResponse.message);\n                }\n            }).catch((error) => {\n                console.log(\"error\", error)\n            })\n        } else{\n            setInvalidErrorMessage(\"Password doesnot match\");\n        }\n    }\n        \n       \n      \n\n    return(\n        <div className=\"resetPassword\">\n            <form className=\"resetContent\" onSubmit={(e) => onReset(e)}>\n                <div className=\"logo\">\n                    <div className=\"logoText\">\n                        <span>LEARN</span>\n                        INFINITY\n                    </div>\n                </div>\n                {invalidErrorMessage && <div className=\"invalidErrorMessage\">{invalidErrorMessage}</div>}\n                <div className=\"passwordWrapper\">\n                    <label htmlFor=\"password\">Enter new Password</label>\n                    <input id=\"password\" type=\"password\" onChange={(e) => onPasswordChange(e)} required/>\n                </div>\n                <div className=\"reenteredPasswordWrapper\">\n                    <label htmlFor=\"reenteredPassword\">Re-enter the new password</label>\n                    <input id=\"password\" type=\"reenteredPassword\" onChange={(e) => onReenteredPasswordChange(e)} required/>\n                </div>\n                <Button type=\"submit\" variant=\"contained\">Reset Password</Button>\n            </form>\n      </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}